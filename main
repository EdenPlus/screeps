var maintainCreeps = require('func.maintainCreeps');
var maintainStructures = require('func.maintainStructures');
var maintainNexus = require('func.maintainNexus');
var statusReport = require('func.statusReport');
var roleHarvester = require('role.harvester');
var roleBuilder = require('role.builder');
var roleUpgrader = require('role.upgrader');
var roleRepairer = require('role.repairer');
var roleMiner = require('role.miner');
var roleTransfer = require('role.transfer');
var roleFiller = require('role.filler');
var roleTower = require('role.tower');
var roleFighter = require('role.fighter');
var roleHealer = require('role.healer');

module.exports.loop = function () {
    // Function for the status report
    statusReport.run();
    
    // Maintenance start
    maintainCreeps.run();
    
    if (!(Game.time % 10)) {
        maintainNexus.run();
        maintainStructures.run();
    }
    // Maintenance end
    
    // Unit AI start
    var towers = Game.rooms['sim'].find(FIND_STRUCTURES, {
        filter: (structure) => {
            return structure.structureType == STRUCTURE_TOWER;
        }
    });
    
    for (let x in towers) {
        roleTower.run(towers[x]);
    }
    
    for (var name in Game.creeps) {
        var creep = Game.creeps[name];
        
//        creep.suicide();
        
        if (creep.memory.role == 'healer') {
            roleHealer.run(creep);
        }
        if (creep.memory.role == 'fighter') {
            delete creep.memory.job;
            roleFighter.run(creep);
        }
        if (creep.memory.role == 'harvester') {
//            creep.suicide();
            roleHarvester.run(creep);
        }
        if (creep.memory.role == 'builder') {
//            creep.suicide();
            roleBuilder.run(creep);
        }
        if (creep.memory.role == 'upgrader') {
            roleUpgrader.run(creep);
        }
        if (creep.memory.role == 'repairer') {
            roleRepairer.run(creep);
//            creep.memory.job = false;
        }
        if (creep.memory.role == 'miner') {
            //creep.suicide();
            roleMiner.run(creep);
        }
        if (creep.memory.role == 'transfer') {
//            delete creep.memory.job;
            roleTransfer.run(creep);
//            creep.suicide();
        }
        if (creep.memory.role == 'filler') {
//            delete creep.memory.job;
            roleFiller.run(creep);
        }
        if (creep.memory.role == 'test pilot') {
            creep.moveTo(0,25);
        }
    }
    // Unit AI end
}
