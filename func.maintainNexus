var maintainNexus = {
    
    run: function(curRoom) {
        var curSpawn = curRoom.find(FIND_MY_SPAWNS)[0];
        if (!curSpawn.memory.nexus) curSpawn.memory.nexus = [];
        if (!curSpawn.memory.nexusSize) curSpawn.memory.nexusSize = 4;
        
        var extensionCount = CONTROLLER_STRUCTURES[STRUCTURE_EXTENSION][curRoom.controller.level];
        var spawnPos = curSpawn.pos;
        
        fillNexusMap:
        while (curSpawn.memory.nexus.length < extensionCount) {
            var a = curSpawn.memory.nexusSize;
            while (a >= 0) {
                var b = curSpawn.memory.nexusSize - a;
                // x + a, y + a
                var curCoord = {x: spawnPos.x + a, y: spawnPos.y + b};
                var isDupe = false;
                // Check if coordinate is dupe
                for (var i in curSpawn.memory.nexus) {
                    if (curSpawn.memory.nexus[i].x == curCoord.x && curSpawn.memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    if (Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == 'wall' || Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == ERR_NOT_IN_RANGE) {
                        isBadLoc = true;
                    }
                    else {
                        if (curRoom.lookAt(curCoord.x, curCoord.y) < 0) {
                            isBadLoc = true;
                        }
                        else {
                            var tile = curRoom.lookAt(curCoord.x, curCoord.y);
                            tileCheck:
                            for (var i in tile) {
                                if (tile[i].type == LOOK_STRUCTURES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                if (tile[i].type == LOOK_CONSTRUCTION_SITES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                // This doesn't work, find to get it to work
                                /*
                                if (tile[i][1] == 'wall') {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                */
                            }
                        }
                    }
                    // Check build queue
                    if (curRoom.memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in curRoom.memory.buildQueue) {
                            if (curRoom.memory.buildQueue[i].x == curCoord.x && curRoom.memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        curSpawn.memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (curSpawn.memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                // x +  a, y - b
                curCoord = {x: spawnPos.x + a, y: spawnPos.y - b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in curSpawn.memory.nexus) {
                    if (curSpawn.memory.nexus[i].x == curCoord.x && curSpawn.memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    if (Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == 'wall' || Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == ERR_NOT_IN_RANGE) {
                        isBadLoc = true;
                    }
                    else {
                        if (curRoom.lookAt(curCoord.x, curCoord.y) < 0) {
                            isBadLoc = true;
                        }
                        else {
                            var tile = curRoom.lookAt(curCoord.x, curCoord.y);
                            tileCheck:
                            for (var i in tile) {
                                if (tile[i].type == LOOK_STRUCTURES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                if (tile[i].type == LOOK_CONSTRUCTION_SITES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                // This doesn't work, find to get it to work
                                /*
                                if (tile[i][1] == 'wall') {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                */
                            }
                        }
                    }
                    // Check build queue
                    if (curRoom.memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in curRoom.memory.buildQueue) {
                            if (curRoom.memory.buildQueue[i].x == curCoord.x && curRoom.memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        curSpawn.memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (curSpawn.memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                // x - a, y + b
                curCoord = {x: spawnPos.x - a, y: spawnPos.y + b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in curSpawn.memory.nexus) {
                    if (curSpawn.memory.nexus[i].x == curCoord.x && curSpawn.memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    if (Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == 'wall' || Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == ERR_NOT_IN_RANGE) {
                        isBadLoc = true;
                    }
                    else {
                        if (curRoom.lookAt(curCoord.x, curCoord.y) < 0) {
                            isBadLoc = true;
                        }
                        else {
                            var tile = curRoom.lookAt(curCoord.x, curCoord.y);
                            tileCheck:
                            for (var i in tile) {
                                if (tile[i].type == LOOK_STRUCTURES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                if (tile[i].type == LOOK_CONSTRUCTION_SITES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                // This doesn't work, find to get it to work
                                /*
                                if (tile[i][1] == 'wall') {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                */
                            }
                        }
                    }
                    // Check build queue
                    if (curRoom.memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in curRoom.memory.buildQueue) {
                            if (curRoom.memory.buildQueue[i].x == curCoord.x && curRoom.memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        curSpawn.memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (curSpawn.memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                // x - a, y - b
                curCoord = {x: spawnPos.x - a, y: spawnPos.y - b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in curSpawn.memory.nexus) {
                    if (curSpawn.memory.nexus[i].x == curCoord.x && curSpawn.memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    if (Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == 'wall' || Game.map.getTerrainAt(curCoord.x, curCoord.y, curRoom.name) == ERR_NOT_IN_RANGE) {
                        isBadLoc = true;
                    }
                    else {
                        if (curRoom.lookAt(curCoord.x, curCoord.y) < 0) {
                            isBadLoc = true;
                        }
                        else {
                            var tile = curRoom.lookAt(curCoord.x, curCoord.y);
                            tileCheck:
                            for (var i in tile) {
                                if (tile[i].type == LOOK_STRUCTURES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                if (tile[i].type == LOOK_CONSTRUCTION_SITES) {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                // This doesn't work, find to get it to work
                                /*
                                if (tile[i][1] == 'wall') {
                                    isBadLoc = true;
                                    break tileCheck;
                                }
                                */
                            }
                        }
                    }
                    // Check build queue
                    if (curRoom.memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in curRoom.memory.buildQueue) {
                            if (curRoom.memory.buildQueue[i].x == curCoord.x && curRoom.memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        curSpawn.memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (curSpawn.memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                a--;
            }
            // Increases the nexus boundary if we no longer have tiles that are capable of being used in the nexus
            if (curSpawn.memory.nexus.length <= extensionCount) {
                curSpawn.memory.nexusSize += 2;
            }
        }
    }
}

module.exports = maintainNexus;
