var maintainNexus = {
    
    run: function() {
        if (!Game.spawns['Spawn1'].memory.nexus) Game.spawns['Spawn1'].memory.nexus = [];
        if (!Game.spawns['Spawn1'].memory.nexusSize) Game.spawns['Spawn1'].memory.nexusSize = 4;
        
        var extensionCount = CONTROLLER_STRUCTURES[STRUCTURE_EXTENSION][Game.rooms['sim'].controller.level];
        var spawnPos = Game.spawns['Spawn1'].pos;
        
        fillNexusMap:
        while (Game.spawns['Spawn1'].memory.nexus.length < extensionCount) {
            var a = Game.spawns['Spawn1'].memory.nexusSize;
            while (a >= 0) {
                var b = Game.spawns['Spawn1'].memory.nexusSize - a;
                var curCoord = {x: spawnPos.x + a, y: spawnPos.y + b};
                var isDupe = false;
                // Check if coordinate is dupe
                for (var i in Game.spawns['Spawn1'].memory.nexus) {
                    if (Game.spawns['Spawn1'].memory.nexus[i].x == curCoord.x && Game.spawns['Spawn1'].memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    var tile = Game.spawns['Spawn1'].room.lookAt(curCoord.x, curCoord.y);
                    tileCheck:
                    for (var i in tile) {
                        if (tile[i][0] == 'structure') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][0] == 'constructionSite') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][1] == 'wall') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                    }
                    // Check build queue
                    if (Memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in Memory.buildQueue) {
                            if (Memory.buildQueue[i].x == curCoord.x && Memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        Game.spawns['Spawn1'].memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (Game.spawns['Spawn1'].memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                curCoord = {x: spawnPos.x + a, y: spawnPos.y - b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in Game.spawns['Spawn1'].memory.nexus) {
                    if (Game.spawns['Spawn1'].memory.nexus[i].x == curCoord.x && Game.spawns['Spawn1'].memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    var tile = Game.spawns['Spawn1'].room.lookAt(curCoord.x, curCoord.y);
                    tileCheck:
                    for (var i in tile) {
                        if (tile[i][0] == 'structure') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][0] == 'constructionSite') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][1] == 'wall') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                    }
                    // Check build queue
                    if (Memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in Memory.buildQueue) {
                            if (Memory.buildQueue[i].x == curCoord.x && Memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        Game.spawns['Spawn1'].memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (Game.spawns['Spawn1'].memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                curCoord = {x: spawnPos.x - a, y: spawnPos.y + b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in Game.spawns['Spawn1'].memory.nexus) {
                    if (Game.spawns['Spawn1'].memory.nexus[i].x == curCoord.x && Game.spawns['Spawn1'].memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    var tile = Game.spawns['Spawn1'].room.lookAt(curCoord.x, curCoord.y);
                    tileCheck:
                    for (var i in tile) {
                        if (tile[i][0] == 'structure') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][0] == 'constructionSite') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][1] == 'wall') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                    }
                    // Check build queue
                    if (Memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in Memory.buildQueue) {
                            if (Memory.buildQueue[i].x == curCoord.x && Memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        Game.spawns['Spawn1'].memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (Game.spawns['Spawn1'].memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                
                curCoord = {x: spawnPos.x - a, y: spawnPos.y - b};
                isDupe = false;
                // Check if coordinate is dupe
                for (var i in Game.spawns['Spawn1'].memory.nexus) {
                    if (Game.spawns['Spawn1'].memory.nexus[i].x == curCoord.x && Game.spawns['Spawn1'].memory.nexus[i].y == curCoord.y) {
                        isDupe = true;
                    }
                }
                // Validate if not dupe
                if (!isDupe) {
                    // Check tile
                    var isBadLoc = false;
                    var tile = Game.spawns['Spawn1'].room.lookAt(curCoord.x, curCoord.y);
                    tileCheck:
                    for (var i in tile) {
                        if (tile[i][0] == 'structure') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][0] == 'constructionSite') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                        if (tile[i][1] == 'wall') {
                            isBadLoc = true;
                            break tileCheck;
                        }
                    }
                    // Check build queue
                    if (Memory.buildQueue) {
                        buildQueueCheck:
                        for (var i in Memory.buildQueue) {
                            if (Memory.buildQueue[i].x == curCoord.x && Memory.buildQueue[i].y == curCoord.y) {
                                isBadLoc = true;
                                break buildQueueCheck;
                            }
                        }
                    }
                    if (!isBadLoc) {
                        // Add coordinate to nexus
                        Game.spawns['Spawn1'].memory.nexus.push({x: curCoord.x, y: curCoord.y});
                        // Break loop on size cap
                        if (Game.spawns['Spawn1'].memory.nexus.length >= extensionCount) {
                            break fillNexusMap;
                        }
                    }
                }
                a--;
            }
            if (Game.spawns['Spawn1'].memory.nexus.length <= extensionCount) {
                Game.spawns['Spawn1'].memory.nexusSize += 2;
            }
        }
    }
}

module.exports = maintainNexus;
